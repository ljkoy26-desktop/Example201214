
// ExampleMFCDlg.cpp : 구현 파일
//

#include "stdafx.h"
#include "ExampleMFC.h"
#include "ExampleMFCDlg.h"
#include "afxdialogex.h"

#include "LJHChildA.h"
#include "LJHChildB.h"
#include "LJHChildC.h"
#include "LJHChildD.h"

#include "unzip.h"
#include "zip.h"

class LJHChildA;
class LJHChildB;
class LJHChildC;
class LJHChildD;

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// 응용 프로그램 정보에 사용되는 CAboutDlg 대화 상자입니다.

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 대화 상자 데이터입니다.
#ifdef AFX_DESIGN_TIME
	enum { IDD = IDD_ABOUTBOX };
#endif

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 지원입니다.

// 구현입니다.
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialogEx(IDD_ABOUTBOX)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
END_MESSAGE_MAP()


// CExampleMFCDlg 대화 상자



CExampleMFCDlg::CExampleMFCDlg(CWnd* pParent /*=NULL*/)
	: CDialogEx(IDD_EXAMPLEMFC_DIALOG, pParent)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
}

void CExampleMFCDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
	DDX_Control(pDX, IDC_BUTTON1, m_ctrlButton);
}

BEGIN_MESSAGE_MAP(CExampleMFCDlg, CDialogEx)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_BN_CLICKED(IDC_BUTTON1, &CExampleMFCDlg::OnBnClickedButton1)
	ON_BN_CLICKED(IDC_BUTTON2, &CExampleMFCDlg::OnBnClickedButton2)
	ON_BN_CLICKED(IDC_BUTTON3, &CExampleMFCDlg::OnBnClickedButton3)
END_MESSAGE_MAP()


// CExampleMFCDlg 메시지 처리기

BOOL CExampleMFCDlg::OnInitDialog()
{
	CDialogEx::OnInitDialog();

	// 시스템 메뉴에 "정보..." 메뉴 항목을 추가합니다.

	// IDM_ABOUTBOX는 시스템 명령 범위에 있어야 합니다.
	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
	ASSERT(IDM_ABOUTBOX < 0xF000);

	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != NULL)
	{
		BOOL bNameValid;
		CString strAboutMenu;
		bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);
		ASSERT(bNameValid);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);
		}
	}

	// 이 대화 상자의 아이콘을 설정합니다.  응용 프로그램의 주 창이 대화 상자가 아닐 경우에는
	//  프레임워크가 이 작업을 자동으로 수행합니다.
	SetIcon(m_hIcon, TRUE);			// 큰 아이콘을 설정합니다.
	SetIcon(m_hIcon, FALSE);		// 작은 아이콘을 설정합니다.

	return TRUE;  // 포커스를 컨트롤에 설정하지 않으면 TRUE를 반환합니다.
}

void CExampleMFCDlg::OnSysCommand(UINT nID, LPARAM lParam)
{
	if ((nID & 0xFFF0) == IDM_ABOUTBOX)
	{
		CAboutDlg dlgAbout;
		dlgAbout.DoModal();
	}
	else
	{
		CDialogEx::OnSysCommand(nID, lParam);
	}
}

// 대화 상자에 최소화 단추를 추가할 경우 아이콘을 그리려면
//  아래 코드가 필요합니다.  문서/뷰 모델을 사용하는 MFC 응용 프로그램의 경우에는
//  프레임워크에서 이 작업을 자동으로 수행합니다.

void CExampleMFCDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 그리기를 위한 디바이스 컨텍스트입니다.

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 클라이언트 사각형에서 아이콘을 가운데에 맞춥니다.
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 아이콘을 그립니다.
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialogEx::OnPaint();
	}
}

// 사용자가 최소화된 창을 끄는 동안에 커서가 표시되도록 시스템에서
//  이 함수를 호출합니다.
HCURSOR CExampleMFCDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}



void CExampleMFCDlg::OnBnClickedButton1() // Carray테스트
{
	/* 객체가 정상적으로 소멸되면서, 
		 a->b->c->d 의 순서로 소멸되고 메모리릭이 없으면 성공!
	*/
	
	LJHChildA* pa = new LJHChildA; // 리스너
	LJHChildB* pb = new LJHChildB; // 디스크립션 리스트
	LJHChildC* pc = new LJHChildC; // 디스크립션
	//LJHChildC* pc1 = new LJHChildC; // 디스크립션
	//LJHChildC* pc2 = new LJHChildC; // 디스크립션
	LJHChildD* pd = new LJHChildD; // 
	
	pc->m_aItem.Add(pd);
	pa->m_aItem.Add(pc); // 리스트는 없는 상태
	
	for (int i = 0; pa->m_aItem.GetSize(); ++i)
	{
		if (pa->m_aItem.GetAt(i)->m_nType == LJHBase::C)
		{
			/* 한개의 케이스 에서는 성공했지만, 
				pc 가 여러개 있을경우나, 순서가 뒤죽박죽이면 조금 결과가 달라짐...
				노트북에서 출력 테스트 완료 20.12.15
			*/
			//LJHBase* pItem = pa->m_aItem.ElementAt(i); // GetAt과 동일한 결과
			LJHBase* pItem = pa->m_aItem.GetAt(i);
			pa->m_aItem.RemoveAt(i);
			pa->m_aItem.Add(pb);
			pb->m_aItem.Add(pItem);
			break;
		}
	}
	delete pa;
}


void CExampleMFCDlg::OnBnClickedButton2() // ZIP
{
	HZIP hz;
	ZRESULT zr;
	CString strPathZip = _T("D:\\ziptest\\test.zip");
	CString strPathIni = _T("D:\\ziptest\\test.ini");

	//D:\ZIP\ 경로에 test.zip이란 파일을 생성한다.

	CreateDirectory(_T("D:\\ZIP"), NULL); // 1 : 
	hz = CreateZip(strPathZip, _T("tiger"));  // 1 : path , 2 : password
	
	//zip파일 생성 실패시 처리
	if (hz == 0)
	{
		AfxMessageBox("Error: Failed to create Zip");
		return;
	}

	int i(0), nLen(0);
	CString strTmp(_T("")), strTmpPath(_T("")), strTmpName(_T(""));

	//INI 파일을 활용하여 압축할 파일 정보를 저장한다.
	//D드라이브에 test.ini란 파일이름으로 저장한다.
	//FTP란 섹션에 Total 키에는 파일 갯수, 그 이후부터는 순번대로 파일 이름을 넣는다.
	//INI파일은 D드라이브에 test.ini란 파일이름으로 저장한다.
	::WritePrivateProfileString("FTP", "Total", "1", strPathIni);
	::WritePrivateProfileString("FTP", "1", "D:\\ziptest\\test.txt", strPathIni);

	//ZipAdd 명령으로 D:\test.ini를 idx.ini로 바꾸어 D:\ZIP\test.zip 파일에 추가한다.
	zr = ZipAdd(hz, "idx.ini", strPathIni); //압축할 파일 명"idx.ini"

	//ZipAdd 명령 실패시 처리  
	if (zr != ZR_OK)
	{
		AfxMessageBox("Error: Failed to add Zip");
		zr = CloseZip(hz);
		return;
	}

	//ZipAdd 명령으로 다른 파일을 추가한다.
	{
		strTmpName = "test.txt";      //Zip파일에 저장할 파일이름
		strTmpPath = "D:\\ziptest\\test.txt";  //압축할 파일 위치
		zr = ZipAdd(hz, strTmpName, strTmpPath);

		if (zr != ZR_OK)
		{
			AfxMessageBox("Error: Failed to add Zip22");
			zr = CloseZip(hz);
			return;
		}
	}
	zr = CloseZip(hz);




}


void CExampleMFCDlg::OnBnClickedButton3() // unzip
{



}
